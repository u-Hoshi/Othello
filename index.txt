1.オセロゲームを作る
  8×8のマス
2.最初は真ん中4マスに白黒石を交互に配置
  白黒の順番で置いて行く
  石を置ける場所は
  ・置くマスに他の意思がない事
  ・置くマスに上下左右、斜め一マスに相手の意思がある事
  ・置いた石、相手の石があった方向の延長上に自身の石がある事
  石を置ける条件が満たせない時は相手の番になる
  すべてのマスに石が置かれるか、どちらかの石が0個になったら終了
  終了時に石の数が多い方が勝ち
  初期画面に8×8の盤・どちらのターンか・ゲーム初期化ボタンを表示する
  html.cssで基本的な形（テーブルの定義、cssっでフォーマット）、jsで8×8のテーブル要素を作る
  
  var ban =document.getElementById("field")でhtmlで定義したテーブルをbanを作る
  bar_new()関数内でテーブルの行列を追加する
  
  クリックを認識させる処理
  var select_cell = ban.rows[x].cells[y]の部分でテーブルから各セルを取得し
  select_cel.onclick=function()のonclickでイベントをハンドリング

  石が置けるかのチェック
  ban_arの二次元配列で石の配列を管理
  function line_reverse(row_index,cell_index,add_x,add_y)で要素を移動しながら
  石の配列を確認し適切か判断する

3.htmlに定義されたid=fieldのテーブル属性に8×8のテーブルを作成
  テーブルの各セルにクリック時のアクションを追加
  クリック時にcheck_reverse関数を呼び出しクリックされたセルに石が置けるか判断
  置ける場合はban_set関数でテーブルを更新
  最後にcheng_turn関数で相手のターンに変更




自分の頭の中でのイメージ


2.最初は真ん中4マスに白黒石を交互に配置→4つはcssで初期配置で後からjsで白黒などの要素を与える
  白黒の順番で置いて行く（奇数番、偶数番で色を分ける）
  石を置ける場所は
  ・置くマスに他の意思がない事
  ・置くマスに上下左右、斜め一マスに相手の意思がある事
  ・置いた石、相手の石があった方向の延長上に自身の石がある事
  石を置ける条件が満たせない時は相手の番になる
  すべてのマスに石が置かれるか、どちらかの石が0個になったら終了
  終了時に石の数が多い方が勝ち
  
  →自分のターンになったら
  石が置けるかのチェック・・・全セルの要素を取得
  クリックしたら延長上に相手の石と自分の意思があるかを確認
  もしどちらかの要素が0になったら相手側の勝ち
  終了時に要素が多い方が勝ち

  初期画面に8×8の盤・どちらのターンか・ゲーム初期化ボタンを表示する→初期化は要素全削除
  html.cssで基本的な形（テーブルの定義、cssっでフォーマット）、jsで8×8のテーブル要素を作る
  
  var ban =document.getElementById("field")でhtmlで定義したテーブルをbanを作る
  bar_new()関数内でテーブルの行列を追加する
  
  クリックを認識させる処理
  var select_cell = ban.rows[x].cells[y]の部分でテーブルから各セルを取得し
  select_cel.onclick=function()のonclickでイベントをハンドリング

  石が置けるかのチェック
  ban_arの二次元配列で石の配列を管理
  function line_reverse(row_index,cell_index,add_x,add_y)で要素を移動しながら
  石の配列を確認し適切か判断する

3.htmlに定義されたid=fieldのテーブル属性に8×8のテーブルを作成
  テーブルの各セルにクリック時のアクションを追加
  クリック時にcheck_reverse関数を呼び出しクリックされたセルに石が置けるか判断
  置ける場合はban_set関数でテーブルを更新
  最後にcheng_turn関数で相手のターンに変更